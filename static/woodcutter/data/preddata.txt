0~^Game #(?P<argument>.*), (?P<argumentb>.*)\.$~GAME START
1~^Turn (?P<argument>.*) - (?P<player>.*)$~NEW TURN
2~^(?P<player>.*) starts their turn\.$~TURN START
3~^(?P<player>.*) ends their buy phase\.$~END BUYPHASE
4~^Between Turns$~BETWEEN TURNS
5~^(?P<player>.*) starts with (?P<cards>.*)\.$~STARTS
6~^(?P<player>.*) buys and gains (?P<cards>.*)\.$~BUY AND GAIN
7~^(?P<player>.*) gains (?P<cards>.*) onto their drawpile\.$~GAIN TOPDECK
8~^(?P<player>.*) gains (?P<cards>.*) from trash\.$~GAIN TRASH
9~^(?P<player>.*) gains another Experiment$~GAIN EXPERIMENT
a~^(?P<player>.*) gains (?P<cards>.*)\.$~GAIN
b~^(?P<player>.*) buys Alms but has (?P<cards>.*) in play\.$~ALMS FAIL
c~^(?P<player>.*) buys Borrow but already had (?P<argument>.*)$~BORROW FAIL
d~^(?P<player>.*) buys (?P<cards>.*)\.$~BUY
e~^(?P<player>.*) trashes nothing\.$~TRASH NOTHING
f~^(?P<player>.*) trashes (?P<cards>.*)\. \((?P<cardsb>.*)\)$~TRASH GENERIC
10~^(?P<player>.*) trashes (?P<cards>.*)\.$~TRASH
11~^(?P<player>.*) discards (?P<cards>.*)\.$~DISCARD
13~^(?P<player>.*) plays (?P<cards>.*) again\. \(\+\$(?P<argument>.*)\)$~THRONE COIN
12~^(?P<player>.*) plays (?P<cards>.*) again\. \((?P<cardsb>.*)\)$~THRONE GENERIC
14~^(?P<player>.*) plays (?P<cards>.*) again\.$~THRONE
15~^(?P<player>.*) plays (?P<cards>.*) a third time\.$~KING
16~^(?P<player>.*) plays (?P<cards>.*)\. \(\+\$(?P<argument>.*)\)$~PLAY COIN
17~^(?P<player>.*) plays (?P<cards>.*)\.$~PLAY
18~^(?P<player>.*) topdecks (?P<cards>.*)\.$~TOPDECK
4f~^(?P<player>.*) gets \+1 Buy, \+1 Action and draws (?P<cards>.*) \(Tactician\)\.$~TACTICIAN DRAW
19~^(?P<player>.*) draws (?P<cards>.*) \(from (?P<argument>.*)\)\.$~DRAW FROM
1a~^(?P<player>.*) draws (?P<cards>.*) \((?P<cardsb>.*)\)\.$~DRAW GENERIC
1b~^(?P<player>.*) draws (?P<cards>.*)\.$~DRAW
1c~^(?P<player>.*) skips a draw \(because of (?P<cards>.*)\)$~PENALTY CARD
1d~^(?P<player>.*) wishes for (?P<cards>.*) but reveals (?P<cardsb>.*)\.$~WISH FAIL
1e~^(?P<player>.*) wishes for (?P<cards>.*) and finds it\.$~WISH SUCCESS
1f~^(?P<player>.*) reveals (?P<cards>.*)\.$~REVEAL
20~^(?P<player>.*) looks at (?P<cards>.*)\.$~LOOK
21~^(?P<player>.*) puts (?P<cards>.*) in hand \((?P<cardsb>.*)\)\.$~INHAND GENERIC
22~^(?P<player>.*) puts (?P<cards>.*) into their hand\.$~PUT INHAND
23~^(?P<player>.*) puts (?P<cards>.*) back onto their deck\.$~RETURN TOPDECK
24~^(?P<player>.*) puts (?P<cards>.*) on the bottom of (?P<argument>.*)\.$~BOTTOMDECK
25~^(?P<player>.*) puts (?P<cards>.*) on their (?P<argument>.*)\.$~PUT ONTO
26~^Druid sets (?P<cards>.*) aside\.$~DRUID BOONS
27~^(?P<player>.*) sets (?P<cards>.*) aside with (?P<argument>.*)\.$~SET ASIDE WITH
28~^(?P<player>.*) sets (?P<cards>.*) aside\.$~SET ASIDE
29~^(?P<player>.*) calls (?P<cards>.*)\.$~CALL
2a~^(?P<player>.*) moves their deck to the discard\.$~DISCARD DECK
2b~^(?P<player>.*) shuffles (?P<cards>.*) into their deck\.$~SHUFFLE INTO
2c~^(?P<player>.*) shuffles their deck\.$~SHUFFLE
2d~^Reshuffling the Black Market deck\.$~SHUFFLE BM
2e~^(?P<player>.*) inserts (?P<cards>.*) into their deck\.$~INSERT INTO
2f~^(?P<player>.*) returns (?P<cards>.*) to (?P<argument>.*)\.$~RETURN TO
30~^(?P<player>.*) returns (?P<argument>.*) set by (?P<cards>.*)\. \(\-\$(?P<argumentb>.*)\)$~RETURN SETBY
31~^(?P<player>.*) returns (?P<cards>.*)\.$~RETURN
32~^(?P<player>.*) receives (?P<cards>.*)\.$~RECEIVE
33~^BLANK$~BLANK
34~^(?P<player>.*) passes (?P<cards>.*) to (?P<playerb>.*)\.$~PASS
35~^(?P<player>.*) reacts with (?P<cards>.*)\.$~REACT
36~^(?P<cards>.*) loses track of (?P<cardsb>.*) \((?P<argument>.*)\)\.$~LOSETRACK GENERIC
37~^(?P<cards>.*) is lost track of\.$~LOSETRACK
38~^(?P<player>.*) summons (?P<cards>.*)\.$~SUMMON
39~^(?P<player>.*) takes (?P<argument>.*) VP from (?P<argumentb>.*)\.$~SHIELD GAIN
3a~^(?P<player>.*) moves (?P<argument>.*) VP from (?P<argumentb>.*) to (?P<argumentc>.*)\.$~SHIELD MOVE
3b~^(?P<player>.*) gets (?P<argument>.*) VP from (?P<cards>.*)\.$~SHIELD GENERIC
3c~^(?P<player>.*) gets (?P<argument>.*) VP\.$~SHIELD GET
3d~^(?P<player>.*) adds (?P<argument>.*) VP to (?P<argumentb>.*)\.$~SHIELD ADD
3e~^(?P<player>.*) moves (?P<argument>.*) to (?P<argumentb>.*)\.$~MOVE
3f~^(?P<player>.*) adds (?P<cards>.*) to (?P<argument>.*)\.$~ADD TO
40~^(?P<player>.*) flips (?P<argument>.*) face down\.$~FLIP DOWN
41~^(?P<player>.*) flips (?P<argument>.*) face up\.$~FLIP UP
42~^(?P<player>.*) takes an extra turn after this one\.$~EXTRATURN
43~^(?P<player>.*) takes (?P<cards>.*) from (?P<argument>.*)\.$~TAKE FROM
44~^(?P<player>.*) takes the coin tokens instead\.$~POSSESSION COFFERS
45~^(?P<player>.*) takes the Debt instead\.$~POSSESSION DEBT
46~^(?P<player>.*) takes the VP tokens instead\.$~POSSESSION VP
47~^(?P<player>.*) takes (?P<argument>.*) debt\.$~TAKE DEBT
48~^(?P<player>.*) takes (?P<cards>.*)\.$~TAKES
49~^(?P<player>.*) repays (?P<argument>.*) debt \((?P<argumentb>.*) remaining\)\.$~REPAY DEBT PARTIAL
4a~^(?P<player>.*) repays (?P<argument>.*) debt\.$~REPAY DEBT
4b~^(?P<player>.*) blocks with (?P<cards>.*)\.$~BLOCK
4c~^(?P<player>.*) names (?P<cards>.*)\.$~NAME
4d~^(?P<player>.*) inherits (?P<cards>.*)\.$~INHERIT
4e~^(?P<cards>.*) is enchanted by (?P<argument>.*)$~ENCHANTED
50~^(?P<player>.*) loses (?P<cards>.*) Coins\.$~LOSE COINS
51~^(?P<player>.*) loses (?P<cards>.*) Coin\.$~LOSE COIN
52~^(?P<player>.*) gets \+1 Action \(from (?P<cards>.*)\)$~ACTION TOKEN
53~^(?P<player>.*) gets \+1 Buy \(from (?P<cards>.*)\)$~BUY TOKEN
54~^(?P<player>.*) gets \+1 Coin \(from (?P<cards>.*)\)$~COIN TOKEN
55~^(?P<player>.*) gets \+\$(?P<argument>.*)\. \((?P<cards>.*)\)$~COINS GENERIC
56~^(?P<player>.*) gets \+\$(?P<argument>.*)\.$~GAIN COINS
57~^(?P<player>.*) gets \+(?P<argument>.*) Buys\. \((?P<cards>.*)\)$~BUYS GENERIC
58~^(?P<player>.*) gets \+(?P<argument>.*) Buy\. \((?P<cards>.*)\)$~BUY GENERIC
59~^(?P<player>.*) gets \+(?P<argument>.*) Buys\.$~GET BUYS
5a~^(?P<player>.*) gets \+(?P<argument>.*) Buy\.$~GET BUY
5b~^(?P<player>.*) gets \+(?P<argument>.*) Actions. \((?P<argumentb>.*)\)$~ACTIONS GENERIC
5c~^(?P<player>.*) gets \+(?P<argument>.*) Action. \((?P<argumentb>.*)\)$~ACTION GENERIC
5d~^(?P<player>.*) gets \+(?P<argument>.*) Actions\.$~ACTIONS
5e~^(?P<player>.*) gets \+(?P<argument>.*) Action\.$~ACTION
5f~^(?P<player>.*) uses (?P<argument>.*) Villagers\.$~USE VILLAGERS
60~^(?P<player>.*) uses (?P<argument>.*) Villager\.$~USE VILLAGER
61~^(?P<player>.*) gets \+(?P<argument>.*) Villagers\.$~GAIN VILLAGERS
62~^(?P<player>.*) gets \+(?P<argument>.*) Villager\.$~GAIN VILLAGER
63~^(?P<player>.*) gets \+(?P<argument>.*) Villagers\. \((?P<cards>.*)\)$~VILLAGERS GENERIC
64~^(?P<player>.*) gets \+(?P<argument>.*) Villager\. \((?P<cards>.*)\)$~VILLAGER GENERIC
65~^(?P<player>.*) uses (?P<argument>.*) Coffers\. \(\+\$(?P<argumentb>.*)\)$~USE COFFERS
66~^(?P<player>.*) uses (?P<argument>.*) Coffers\. \(\+\$(?P<argumentb>.*)\)$~USE COFFER
67~^(?P<player>.*) gets \+(?P<argument>.*) Coffers\. \((?P<cards>.*)\)$~COFFERS GENERIC
68~^(?P<player>.*) gets \+(?P<argument>.*) Coffers\. \((?P<cards>.*)\)$~COFFER GENERIC
69~^(?P<player>.*) gets a Coffers from (?P<cards>.*)\.$~COFFERS FROM
6a~^(?P<player>.*) gets \+(?P<argument>.*) Coffers\.$~GAIN COFFERS
6b~^Obelisk chooses the (?P<cards>.*) pile\.$~OBELISK CHOICE
6c~^Obelisk failed to select an Action Supply pile\.$~OBELISK FAIL
6d~^(?P<player>.*) had no cards to set aside\.$~SET FAIL
6e~^(?P<player>.*) had no cards to discard or topdeck\.$~TOPDECK FAIL
6f~^Mission fails because (?P<player>.*) already owned the previous turn\.$~MISSION FAIL
70~^(?P<player>.*) failed to discard an Attack\.$~QUEST ATTACKFAIL
71~^(?P<player>.*) failed to discard 6 cards\.$~QUEST CARDFAIL
72~^(?P<player>.*) failed to discard (?P<cards>.*)\.$~DISCARD FAIL
73~^(?P<player>.*) failed to gain (?P<cards>.*)\.$~GAIN FAIL
74~^(?P<player>.*) didn't trash an Action card\.$~ACTIONTRASH FAIL
75~^(?P<argument>.*) isn't empty\.$~NOT EMPTY
76~^Outpost fails because (?P<player>.*) already owned the previous turn\.$~OUTPOST FAIL
77~^Outpost fails because (?P<player>.*) has already played it\.$~OUTPOST FAIL2
78~^(?P<player>.*) fails to discard for The Sky's Gift$~SKY GIFT FAIL
79~^The Sun's Gift has nothing to discard\.$~SUN GIFT FAIL
7a~^(?P<argument>.*)$~OTHERS